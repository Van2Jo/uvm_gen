

//***** ***** ***** *****  *****  *****  *****  *****  *****  *****  *****
//Auto Generated by UVM-Generator
//Author: beng.jiang
//date: 2022-12-23
//Contents:pwr_ctrl_agent
//***** ***** ***** *****  *****  *****  *****  *****  *****  *****  *****
`ifndef PWR_CTRL_MONITOR_SV
`define PWR_CTRL_MONITOR_SV

class pwr_ctrl_monitor extends uvm_monitor ;

	`uvm_component_utils(pwr_ctrl_monitor)

	//Config	//Interface
	virtual pwr_ctrl_interface vif;
	
	//TLM 
	uvm_analysis_port#(pwr_ctrl_item) mon_port;
	
	//Constructor Function
	function new(string name="pwr_ctrl_monitor",uvm_component parent=null);
		super.new(name,parent);
	endfunction
	
	//Phase Methods
	extern virtual function void build_phase(uvm_phase phase);
	extern virtual function void connect_phase(uvm_phase phase);
	extern virtual task run_phase(uvm_phase phase);
	
	//Task Function Methods
	extern task monitor_transation();
	
	{{method}}
	// Add user method here
	//e.g. task function
	// User method ends
endclass

function void pwr_ctrl_monitor::build_phase(uvm_phase phase);
	super.build_phase(phase);
	`uvm_info(get_name(),"Build Phase is Called",UVM_LOW)
	mon_port=new("mon_port",this);
	{{build_phase}}
	// Add user build here
	//e.g. TLM build
	// User build ends
endfunction

function void pwr_ctrl_monitor::connect_phase(uvm_phase phase);
	super.connect_phase(phase);
	`uvm_info(get_name(),"Connect Phase is Called",UVM_LOW)
	{{connect_phase}}
	// Add user connect here
	//e.g. TLM  interface connect
	// User connect ends
endfunction

task pwr_ctrl_monitor::run_phase(uvm_phase phase);
	super.run_phase(phase);
	`uvm_info(get_name(),"Run Phase is Called",UVM_LOW)
	fork
		moi_request();
	// Add user logic here

	// User logic ends
	{{run_phase_fork}}
	join
	// Add user logic here
	//e.g. task function `uvm_do_callbacks
	// User logic ends	
	{{run_phase_main}}
endtask

task pwr_ctrl_monitor::monitor_transation();

	forever
	begin
	    pwr_ctrl_item tr
		tr=pwr_ctrl_item::type_id::create("tr",this);
		// Add user logic here
		#1;
		// User logic ends
		mon_port.write(tr);
	end
endtask

`endif 